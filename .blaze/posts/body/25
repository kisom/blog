<p>
<a href="https://www.github.com">github</a> is a very useful service but very limiting
for private repositories with collaborators. there are a few things you need
to do differently, and a remote repo shouldn't be used for a work environment.</p>
<p>
the basic requirements are
<ul>
<li>a locally-hosted repo with code and a committed working tree</li>
<li>a place to store the remote repo accessible via ssh</li>
</ul>
</p>
<p>
the first thing we need to do is to make sure that if it isn't already,
the local repo should be committed and clean.  <br />  
<code>$ git commit -a</code></p>
<p>
now we need to set up our remote end. if you are setting up the remote end on
a remote server, go ahead and ssh into it. next, make the directory to store
the repo in. a standard naming convention is to name the remote end as
<code>$repo.git</code>. For example, if your project is named <code>woofs</code> and you are setting
it up in /git/kyle, you would issue:  <br />  
<code>mkdir /git/kyle/woofs.git</code>  <br />  </p>
<p>
now change your
working directory to the repo dir. the next thing to do is to create a bare
repo in this directory:  <br />  
<code>$ git init --bare</code>  <br />  </p>
<p>
now, you need to make sure the permissions are set up properly. assuming the
project belongs to the woofs group and using the same directory structure as 
above, you could do something along the lines of  <br />  
<pre><code>$ chgrp -R woofs /git/kyle/woofs.git    
$ chmod -R g+w /git/kyle/woofs.git</code></pre>
</p>
<p>
now you can log off the server if you are on a remote system.</p>
<p>
for your local repo, change your working directory to it.
<pre><code>$ cd ~/code/woofs</code></pre>
</p>
<p>
add your remote repo -  <br />  
<ul>
<li>for a remote server: <code>$ git remote add origin ssh://remote_server/git/kyle/woofs.git</code>  <br />  </li>
<li>for a local server: <code>$ git remote add origin /git/kyle/woofs</code>    </li>
</ul>
</p>
<p>
now push changes:
<pre><code>$ git push origin master</code></pre>
</p>
<p>
at this point, you should be able to just issue a <code>git push</code> from now.</p>
<p>
your collaborators (or you on a different machine) should be able to  <br />  
<ul>
<li>for a remote server: <code>$ git clone ssh://remote_server/git/kyle/woofs.git</code>  <br />  </li>
<li>for a local path: <code>$ git clone /git/kyle/woofs.git</code></li>
</ul>
</p>
<p>
obviously you need to have proper unix permissions, like groups and user
accounts on the remote server. it's easiest to set up ssh keys but that's just
a convenience thing.</p>
<p>
that's all there is to it.</p>
